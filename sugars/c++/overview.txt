# C++ Templates #

Representation: concrete surface syntax
Authorship: user-defined
Metalanguage: C++ templates (pattern based)
Desugaring Order: IO
Phase: compile-time
Expressiveness:
  Arguments: types and primitive values
  Result: function/method definition, struct/class definition, or type alias
  Deconstruction: yes (although this is mostly case analysis on primitive values)
  Sugar-defining Sugars: no
Safety:
  Syntax safe: ?
  Hygienic: NA
  Scope safe: NA
  Type safe: NA


# Installation Notes (C++11) #

0. Install g++.

The examples can be compiled with g++, with -std=c++11
